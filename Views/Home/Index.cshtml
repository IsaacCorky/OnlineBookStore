@{
    ViewData["Title"] = "Home Page";
}
@model BookListViewModel

    
@foreach (var b in Model.Books)
{   // Pull the html from the BookSummary shared view where the variable b is our "Model"
    <partial name="BookSummary" model="b" /> <br />
}
   
<div page-model="@Model.PagingInfo"
     page-action="Index"
     page-classes-enabled="true"
     page-class="btn"
     page-class-normal="btn-outline-dark"
     page-class-selected="btn-secondary"
     page-url-category="@Model.BookCategory"
     class="btn-group pull-right m-1"></div>
    
<!--
Isaac Corcoran

    IS 413 –Hilton
    Assignment #7
    Continuing the Bookstore project from Assignments #5 & #6, we are going to add the ability to filter by book 
    category(i.e. “Autobiography”, “Self-Help”, etc.) to our web app so that the categories are automatically-generated 
    and automatically filtered bythe app.Following the patternin the videos/textbook:
    •Add the ability to filter by category in the Controller
    •Improve the URLs to a pattern that is more user-friendly
    •Build in the functionality so that the category is dynamically-displayed in the URL
    •Insert the category menu using theView Componentmethod
    •Build the partial viewused by the View Component to dynamicallydisplay the list of categories•Filter the results by category
    •Dynamically highlight the category that has been selected
    •Fix the page numbering to match the number ofitems by categoryAs always, write clean code that is easy to read.
    Submit a link to the GitHub repository containing your assignment via Learning Suite.
   (NOTE:  If you cannot submit via GitHub, you can submit a link to a .zip file, but you will lose5 points.)
            -->
